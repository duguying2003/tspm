package com.edreaminfo.cbas.orm.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class UserDayStatusExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_day_status
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_day_status
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_day_status
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_day_status
     *
     * @mbggenerated
     */
    public UserDayStatusExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_day_status
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_day_status
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_day_status
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_day_status
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_day_status
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_day_status
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_day_status
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_day_status
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_day_status
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_day_status
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_day_status
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andDtIsNull() {
            addCriterion("dt is null");
            return (Criteria) this;
        }

        public Criteria andDtIsNotNull() {
            addCriterion("dt is not null");
            return (Criteria) this;
        }

        public Criteria andDtEqualTo(Date value) {
            addCriterionForJDBCDate("dt =", value, "dt");
            return (Criteria) this;
        }

        public Criteria andDtNotEqualTo(Date value) {
            addCriterionForJDBCDate("dt <>", value, "dt");
            return (Criteria) this;
        }

        public Criteria andDtGreaterThan(Date value) {
            addCriterionForJDBCDate("dt >", value, "dt");
            return (Criteria) this;
        }

        public Criteria andDtGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("dt >=", value, "dt");
            return (Criteria) this;
        }

        public Criteria andDtLessThan(Date value) {
            addCriterionForJDBCDate("dt <", value, "dt");
            return (Criteria) this;
        }

        public Criteria andDtLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("dt <=", value, "dt");
            return (Criteria) this;
        }

        public Criteria andDtIn(List<Date> values) {
            addCriterionForJDBCDate("dt in", values, "dt");
            return (Criteria) this;
        }

        public Criteria andDtNotIn(List<Date> values) {
            addCriterionForJDBCDate("dt not in", values, "dt");
            return (Criteria) this;
        }

        public Criteria andDtBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("dt between", value1, value2, "dt");
            return (Criteria) this;
        }

        public Criteria andDtNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("dt not between", value1, value2, "dt");
            return (Criteria) this;
        }

        public Criteria andUser_idIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUser_idIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUser_idEqualTo(Integer value) {
            addCriterion("user_id =", value, "user_id");
            return (Criteria) this;
        }

        public Criteria andUser_idNotEqualTo(Integer value) {
            addCriterion("user_id <>", value, "user_id");
            return (Criteria) this;
        }

        public Criteria andUser_idGreaterThan(Integer value) {
            addCriterion("user_id >", value, "user_id");
            return (Criteria) this;
        }

        public Criteria andUser_idGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_id >=", value, "user_id");
            return (Criteria) this;
        }

        public Criteria andUser_idLessThan(Integer value) {
            addCriterion("user_id <", value, "user_id");
            return (Criteria) this;
        }

        public Criteria andUser_idLessThanOrEqualTo(Integer value) {
            addCriterion("user_id <=", value, "user_id");
            return (Criteria) this;
        }

        public Criteria andUser_idIn(List<Integer> values) {
            addCriterion("user_id in", values, "user_id");
            return (Criteria) this;
        }

        public Criteria andUser_idNotIn(List<Integer> values) {
            addCriterion("user_id not in", values, "user_id");
            return (Criteria) this;
        }

        public Criteria andUser_idBetween(Integer value1, Integer value2) {
            addCriterion("user_id between", value1, value2, "user_id");
            return (Criteria) this;
        }

        public Criteria andUser_idNotBetween(Integer value1, Integer value2) {
            addCriterion("user_id not between", value1, value2, "user_id");
            return (Criteria) this;
        }

        public Criteria andActive_daysIsNull() {
            addCriterion("active_days is null");
            return (Criteria) this;
        }

        public Criteria andActive_daysIsNotNull() {
            addCriterion("active_days is not null");
            return (Criteria) this;
        }

        public Criteria andActive_daysEqualTo(Integer value) {
            addCriterion("active_days =", value, "active_days");
            return (Criteria) this;
        }

        public Criteria andActive_daysNotEqualTo(Integer value) {
            addCriterion("active_days <>", value, "active_days");
            return (Criteria) this;
        }

        public Criteria andActive_daysGreaterThan(Integer value) {
            addCriterion("active_days >", value, "active_days");
            return (Criteria) this;
        }

        public Criteria andActive_daysGreaterThanOrEqualTo(Integer value) {
            addCriterion("active_days >=", value, "active_days");
            return (Criteria) this;
        }

        public Criteria andActive_daysLessThan(Integer value) {
            addCriterion("active_days <", value, "active_days");
            return (Criteria) this;
        }

        public Criteria andActive_daysLessThanOrEqualTo(Integer value) {
            addCriterion("active_days <=", value, "active_days");
            return (Criteria) this;
        }

        public Criteria andActive_daysIn(List<Integer> values) {
            addCriterion("active_days in", values, "active_days");
            return (Criteria) this;
        }

        public Criteria andActive_daysNotIn(List<Integer> values) {
            addCriterion("active_days not in", values, "active_days");
            return (Criteria) this;
        }

        public Criteria andActive_daysBetween(Integer value1, Integer value2) {
            addCriterion("active_days between", value1, value2, "active_days");
            return (Criteria) this;
        }

        public Criteria andActive_daysNotBetween(Integer value1, Integer value2) {
            addCriterion("active_days not between", value1, value2, "active_days");
            return (Criteria) this;
        }

        public Criteria andInactive_daysIsNull() {
            addCriterion("inactive_days is null");
            return (Criteria) this;
        }

        public Criteria andInactive_daysIsNotNull() {
            addCriterion("inactive_days is not null");
            return (Criteria) this;
        }

        public Criteria andInactive_daysEqualTo(Integer value) {
            addCriterion("inactive_days =", value, "inactive_days");
            return (Criteria) this;
        }

        public Criteria andInactive_daysNotEqualTo(Integer value) {
            addCriterion("inactive_days <>", value, "inactive_days");
            return (Criteria) this;
        }

        public Criteria andInactive_daysGreaterThan(Integer value) {
            addCriterion("inactive_days >", value, "inactive_days");
            return (Criteria) this;
        }

        public Criteria andInactive_daysGreaterThanOrEqualTo(Integer value) {
            addCriterion("inactive_days >=", value, "inactive_days");
            return (Criteria) this;
        }

        public Criteria andInactive_daysLessThan(Integer value) {
            addCriterion("inactive_days <", value, "inactive_days");
            return (Criteria) this;
        }

        public Criteria andInactive_daysLessThanOrEqualTo(Integer value) {
            addCriterion("inactive_days <=", value, "inactive_days");
            return (Criteria) this;
        }

        public Criteria andInactive_daysIn(List<Integer> values) {
            addCriterion("inactive_days in", values, "inactive_days");
            return (Criteria) this;
        }

        public Criteria andInactive_daysNotIn(List<Integer> values) {
            addCriterion("inactive_days not in", values, "inactive_days");
            return (Criteria) this;
        }

        public Criteria andInactive_daysBetween(Integer value1, Integer value2) {
            addCriterion("inactive_days between", value1, value2, "inactive_days");
            return (Criteria) this;
        }

        public Criteria andInactive_daysNotBetween(Integer value1, Integer value2) {
            addCriterion("inactive_days not between", value1, value2, "inactive_days");
            return (Criteria) this;
        }

        public Criteria andTurn_activeIsNull() {
            addCriterion("turn_active is null");
            return (Criteria) this;
        }

        public Criteria andTurn_activeIsNotNull() {
            addCriterion("turn_active is not null");
            return (Criteria) this;
        }

        public Criteria andTurn_activeEqualTo(Integer value) {
            addCriterion("turn_active =", value, "turn_active");
            return (Criteria) this;
        }

        public Criteria andTurn_activeNotEqualTo(Integer value) {
            addCriterion("turn_active <>", value, "turn_active");
            return (Criteria) this;
        }

        public Criteria andTurn_activeGreaterThan(Integer value) {
            addCriterion("turn_active >", value, "turn_active");
            return (Criteria) this;
        }

        public Criteria andTurn_activeGreaterThanOrEqualTo(Integer value) {
            addCriterion("turn_active >=", value, "turn_active");
            return (Criteria) this;
        }

        public Criteria andTurn_activeLessThan(Integer value) {
            addCriterion("turn_active <", value, "turn_active");
            return (Criteria) this;
        }

        public Criteria andTurn_activeLessThanOrEqualTo(Integer value) {
            addCriterion("turn_active <=", value, "turn_active");
            return (Criteria) this;
        }

        public Criteria andTurn_activeIn(List<Integer> values) {
            addCriterion("turn_active in", values, "turn_active");
            return (Criteria) this;
        }

        public Criteria andTurn_activeNotIn(List<Integer> values) {
            addCriterion("turn_active not in", values, "turn_active");
            return (Criteria) this;
        }

        public Criteria andTurn_activeBetween(Integer value1, Integer value2) {
            addCriterion("turn_active between", value1, value2, "turn_active");
            return (Criteria) this;
        }

        public Criteria andTurn_activeNotBetween(Integer value1, Integer value2) {
            addCriterion("turn_active not between", value1, value2, "turn_active");
            return (Criteria) this;
        }

        public Criteria andTurn_inactiveIsNull() {
            addCriterion("turn_inactive is null");
            return (Criteria) this;
        }

        public Criteria andTurn_inactiveIsNotNull() {
            addCriterion("turn_inactive is not null");
            return (Criteria) this;
        }

        public Criteria andTurn_inactiveEqualTo(Integer value) {
            addCriterion("turn_inactive =", value, "turn_inactive");
            return (Criteria) this;
        }

        public Criteria andTurn_inactiveNotEqualTo(Integer value) {
            addCriterion("turn_inactive <>", value, "turn_inactive");
            return (Criteria) this;
        }

        public Criteria andTurn_inactiveGreaterThan(Integer value) {
            addCriterion("turn_inactive >", value, "turn_inactive");
            return (Criteria) this;
        }

        public Criteria andTurn_inactiveGreaterThanOrEqualTo(Integer value) {
            addCriterion("turn_inactive >=", value, "turn_inactive");
            return (Criteria) this;
        }

        public Criteria andTurn_inactiveLessThan(Integer value) {
            addCriterion("turn_inactive <", value, "turn_inactive");
            return (Criteria) this;
        }

        public Criteria andTurn_inactiveLessThanOrEqualTo(Integer value) {
            addCriterion("turn_inactive <=", value, "turn_inactive");
            return (Criteria) this;
        }

        public Criteria andTurn_inactiveIn(List<Integer> values) {
            addCriterion("turn_inactive in", values, "turn_inactive");
            return (Criteria) this;
        }

        public Criteria andTurn_inactiveNotIn(List<Integer> values) {
            addCriterion("turn_inactive not in", values, "turn_inactive");
            return (Criteria) this;
        }

        public Criteria andTurn_inactiveBetween(Integer value1, Integer value2) {
            addCriterion("turn_inactive between", value1, value2, "turn_inactive");
            return (Criteria) this;
        }

        public Criteria andTurn_inactiveNotBetween(Integer value1, Integer value2) {
            addCriterion("turn_inactive not between", value1, value2, "turn_inactive");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_day_status
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_day_status
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}